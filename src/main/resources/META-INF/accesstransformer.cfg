public net.minecraft.client.Minecraft rightClickDelay # rightClickDelay
public net.minecraft.client.particle.ParticleEngine$MutableSpriteSet
public net.minecraft.client.particle.ParticleEngine$MutableSpriteSet sprites # sprites
public net.minecraft.client.renderer.RenderType$CompositeRenderType
public net.minecraft.client.renderer.RenderType$CompositeState states # states
public net.minecraft.client.renderer.RenderType$CompositeState outlineProperty # outlineProperty
public net.minecraft.client.renderer.RenderType$CompositeState textureState # textureState
public net.minecraft.client.renderer.RenderType$CompositeRenderType OUTLINE # OUTLINE
public net.minecraft.client.renderer.RenderType$CompositeState cullState # cullState
public com.mojang.blaze3d.vertex.BufferBuilder building # building
public net.minecraft.client.renderer.LevelRenderer transparencyChain # transparencyChain
public com.mojang.blaze3d.vertex.BufferUploader lastImmediateBuffer # lastImmediateBuffer
public net.minecraft.client.renderer.RenderType$CompositeState shaderState # shaderState
public net.minecraft.client.renderer.RenderType$CompositeState transparencyState # transparencyState
public net.minecraft.client.renderer.RenderType$CompositeState lightmapState # lightmapState
public net.minecraft.client.renderer.ShaderInstance uniformMap # uniformMap
public net.minecraft.client.renderer.EffectInstance parseUniformNode(Lcom/google/gson/JsonElement;)V # parseUniformNode
public net.minecraft.client.renderer.ShaderInstance parseUniformNode(Lcom/google/gson/JsonElement;)V # parseUniformNode
public net.minecraft.client.renderer.EffectInstance samplerMap # samplerMap
public net.minecraft.client.renderer.GameRenderer getFov(Lnet/minecraft/client/Camera;FZ)D # getFov
public net.minecraft.client.renderer.PostChain passes # passes
public net.minecraft.world.entity.vehicle.Boat lastYd # lastYd
public net.minecraft.client.renderer.RenderType$CompositeRenderType state()Lnet/minecraft/client/renderer/RenderType$CompositeState; # state
public net.minecraft.client.Camera setRotation(FF)V # setRotation
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard shader # shader

public net.minecraft.world.level.block.state.BlockBehaviour properties # properties
public net.minecraft.world.level.block.state.BlockBehaviour properties()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; # properties
public net.minecraft.world.level.block.state.BlockBehaviour$Properties destroyTime # destroyTime
public net.minecraft.world.level.block.state.BlockBehaviour$Properties explosionResistance # explosionResistance
public net.minecraft.world.level.block.state.BlockBehaviour$Properties hasCollision # hasCollision
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isRandomlyTicking # isRandomlyTicking
public net.minecraft.world.level.block.state.BlockBehaviour$Properties lightEmission # lightEmission
public net.minecraft.world.level.block.state.BlockBehaviour$Properties mapColor # mapColor
public net.minecraft.world.level.block.state.BlockBehaviour$Properties soundType # soundType
public net.minecraft.world.level.block.state.BlockBehaviour$Properties friction # friction
public net.minecraft.world.level.block.state.BlockBehaviour$Properties speedFactor # speedFactor
public net.minecraft.world.level.block.state.BlockBehaviour$Properties dynamicShape # dynamicShape
public net.minecraft.world.level.block.state.BlockBehaviour$Properties canOcclude # canOcclude
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isAir # isAir
public net.minecraft.world.level.block.state.BlockBehaviour$Properties requiresCorrectToolForDrops # requiresCorrectToolForDrops
public net.minecraft.world.level.block.state.BlockBehaviour$Properties jumpFactor # jumpFactor
public net.minecraft.world.level.block.state.BlockBehaviour$Properties drops # drops
public net.minecraft.world.level.block.state.BlockBehaviour$Properties ignitedByLava # ignitedByLava
public net.minecraft.world.level.block.state.BlockBehaviour$Properties forceSolidOn # forceSolidOn
public net.minecraft.world.level.block.state.BlockBehaviour$Properties pushReaction # pushReaction
public net.minecraft.world.level.block.state.BlockBehaviour$Properties spawnTerrainParticles # spawnTerrainParticles
public net.minecraft.world.level.block.state.BlockBehaviour$Properties instrument # instrument
public net.minecraft.world.level.block.state.BlockBehaviour$Properties replaceable # replaceable
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isValidSpawn # isValidSpawn
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isRedstoneConductor # isRedstoneConductor
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isSuffocating # isSuffocating
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isViewBlocking # isViewBlocking
public net.minecraft.world.level.block.state.BlockBehaviour$Properties emissiveRendering # emissiveRendering
public net.minecraft.world.level.block.state.BlockBehaviour$Properties requiredFeatures # requiredFeatures
public net.minecraft.world.level.block.state.BlockBehaviour$Properties offsetFunction # offsetFunction
public net.minecraft.world.level.block.state.BlockBehaviour$Properties hasPostProcess # hasPostProcess

public net.minecraft.world.item.crafting.ShapedRecipe result # result