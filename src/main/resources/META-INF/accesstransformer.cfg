public net.minecraft.client.Minecraft rightClickDelay # rightClickDelay
public net.minecraft.client.particle.ParticleEngine$MutableSpriteSet
public net.minecraft.client.particle.ParticleEngine$MutableSpriteSet sprites # sprites
public net.minecraft.client.renderer.RenderType$CompositeRenderType
public net.minecraft.client.renderer.RenderType$CompositeState states # states
public net.minecraft.client.renderer.RenderType$CompositeState outlineProperty # outlineProperty
public net.minecraft.client.renderer.RenderType$CompositeState textureState # textureState
public net.minecraft.client.renderer.RenderType$CompositeRenderType OUTLINE # OUTLINE
public net.minecraft.client.renderer.RenderType$CompositeState cullState # cullState
public com.mojang.blaze3d.vertex.BufferBuilder building # building
public net.minecraft.client.renderer.LevelRenderer transparencyChain # transparencyChain
public com.mojang.blaze3d.vertex.BufferUploader lastImmediateBuffer # lastImmediateBuffer
public net.minecraft.client.renderer.RenderType$CompositeState shaderState # shaderState
public net.minecraft.client.renderer.RenderType$CompositeState transparencyState # transparencyState
public net.minecraft.client.renderer.RenderType$CompositeState lightmapState # lightmapState
public net.minecraft.client.renderer.ShaderInstance uniformMap # uniformMap
public net.minecraft.client.renderer.EffectInstance parseUniformNode(Lcom/google/gson/JsonElement;)V # parseUniformNode
public net.minecraft.client.renderer.ShaderInstance parseUniformNode(Lcom/google/gson/JsonElement;)V # parseUniformNode
public net.minecraft.client.renderer.EffectInstance samplerMap # samplerMap
public net.minecraft.client.renderer.GameRenderer getFov(Lnet/minecraft/client/Camera;FZ)D # getFov
public net.minecraft.client.renderer.PostChain passes # passes
public net.minecraft.world.entity.vehicle.Boat lastYd # lastYd
public net.minecraft.client.renderer.RenderType$CompositeRenderType state()Lnet/minecraft/client/renderer/RenderType$CompositeState; # state
public net.minecraft.client.Camera setRotation(FF)V # setRotation
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard shader # shader
public net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard cutoutTexture()Ljava/util/Optional; # cutoutTexture
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard cutoutTexture()Ljava/util/Optional; # cutoutTexture
public net.minecraft.client.renderer.RenderStateShard$MultiTextureStateShard cutoutTexture()Ljava/util/Optional; # cutoutTexture
public net.minecraft.client.particle.ParticleEngine spriteSets # spriteSets
public net.minecraft.client.renderer.ShaderInstance uniforms # uniforms
public net.minecraft.client.renderer.RenderType$CompositeRenderType state # state
public net.minecraft.world.effect.MobEffectInstance amplifier # amplifier
public net.minecraft.world.effect.MobEffectInstance duration # duration
public net.minecraft.world.entity.LivingEntity effectsDirty # effectsDirty
public net.minecraft.world.entity.vehicle.Boat status # status
public net.minecraft.world.entity.LivingEntity onEffectUpdated(Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V # onEffectUpdated
public net.minecraft.server.level.ServerPlayer onEffectUpdated(Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V # onEffectUpdated
public net.minecraft.nbt.CompoundTag tags # tags
public net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder <init>()V
public net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder <init>()V # CompositeStateBuilder
public net.minecraft.world.item.crafting.ShapedRecipe result # result